name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/386
          - linux/arm/v5
          - linux/arm/v7
          - linux/arm64/v8
          - linux/mips64le
          - linux/ppc64le
          - linux/s390x
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and package using PyInstaller
      run: |
        PLATFORM=${{ matrix.platform }}
        # Set up the appropriate architecture for PyInstaller
        ARCH=$(echo $PLATFORM | cut -d '/' -f 2)
        case $ARCH in
          amd64) PYTHON_IMAGE="python:3.9-slim" ;;
          386) PYTHON_IMAGE="i386/python:3.9-slim" ;;
          arm/v5) PYTHON_IMAGE="arm32v5/python:3.9-slim" ;;
          arm/v7) PYTHON_IMAGE="arm32v7/python:3.9-slim" ;;
          arm64/v8) PYTHON_IMAGE="arm64v8/python:3.9-slim" ;;
          mips64le) PYTHON_IMAGE="multiarch/mips64le-python:3.9-slim" ;;
          ppc64le) PYTHON_IMAGE="ppc64le/python:3.9-slim" ;;
          s390x) PYTHON_IMAGE="s390x/python:3.9-slim" ;;
        esac
        docker run --rm -v $(pwd):/src -w /src $PYTHON_IMAGE bash -c "
          apt install python3 python3-pip
          pip install pyinstaller
          pyinstaller Yasu.spec
          tar -czvf Yasu-${PLATFORM//\//-}.tar.gz dist/Yasu
        "
        mv Yasu-${PLATFORM//\//-}.tar.gz output/

    - name: Upload to release
      uses: actions/upload-artifact@v2
      with:
        name: Yasu-${{ matrix.platform }}.tar.gz
        path: output/Yasu-${{ matrix.platform }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        path: output

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: output/
        asset_name: Yasu-${{ matrix.platform }}.tar.gz
        asset_content_type: application/gzip

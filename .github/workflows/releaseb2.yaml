name: Publish the built software

on:
  push:
    tags:
    - '*' 

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arch: [linux/amd64, linux/386, linux/arm/v5, linux/arm/v7, linux/arm64/v8, linux/mips64le, linux/ppc64le, linux/s390x]

    steps:
    - name: Extract Tag Name
      id: extract_tag
      run: echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      run: |
        docker buildx build --platform ${{ matrix.arch }} --output type=docker --tag pyinstaller-builder:${{ matrix.arch }} .

    - name: Run PyInstaller
      run: |
        docker run --rm -v $PWD:/workspace pyinstaller-builder:${{ matrix.arch }} bash -c "
          cd /workspace && \
          pip install -r requirements.txt && \
          pyinstaller Yasu.spec && \
          mv dist/Yasu dist/Yasu_${{ env.tag_name }}_${{ matrix.arch }} && \
          mv config.ini.example dist/config.ini.example && \
          cd dist && \
          tar -czf Yasu_${{ env.tag_name }}_${{ matrix.arch }}.tar.gz * && \
          mv Yasu_${{ env.tag_name }}_${{ matrix.arch }}.tar.gz /workspace/binary/Yasu_${{ env.tag_name }}_${{ matrix.arch }}.tar.gz
        "

    - name: Upload build result
      uses: actions/upload-artifact@v3
      with:
        name: build-result-${{ matrix.arch }}
        path: binary/Yasu_${{ env.tag_name }}_${{ matrix.arch }}.tar.gz

  release:
    name: Create release
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Extract Tag Name
      id: extract_tag
      run: echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
  
    - name: Use Tag Name
      run: |
        echo "Tag name: ${{ env.tag_name }}"

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-result-${{ matrix.arch }}

    - name: Release software
      uses: ncipollo/release-action@v1
      with:
        artifacts: "binary/*.tar.gz"
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ env.tag_name }}
